(function() {
  var Breakpoint;

  module.exports = Breakpoint = (function() {
    atom.deserializers.add(Breakpoint);

    Breakpoint.version = '1a';

    Breakpoint.breakpointId = 1;

    Breakpoint.TYPE_LINE = 'line';

    Breakpoint.TYPE_EXCEPTION = 'exception';

    Breakpoint.getNextBreakpointId = function() {
      return this.breakpointId++;
    };

    function Breakpoint(_arg) {
      this.filepath = _arg.filepath, this.marker = _arg.marker, this.line = _arg.line, this.type = _arg.type, this.exception = _arg.exception;
      if (!this.type) {
        this.type = Breakpoint.TYPE_LINE;
      }
      this.id = Breakpoint.getNextBreakpointId();
      if (this.marker) {
        this.syncLineFromMarker();
      }
    }

    Breakpoint.prototype.serialize = function() {
      return {
        deserializer: 'Breakpoint',
        version: this.constructor.version,
        data: {
          filepath: this.getPath(),
          line: this.getLine()
        }
      };
    };

    Breakpoint.deserialize = function(_arg) {
      var data;
      data = _arg.data;
      return new Breakpoint({
        filepath: data.filepath,
        line: data.line
      });
    };

    Breakpoint.prototype.getPath = function() {
      return this.filepath;
    };

    Breakpoint.prototype.getMarker = function() {
      return this.marker;
    };

    Breakpoint.prototype.setMarker = function(marker) {
      this.marker = marker;
      return void 0;
    };

    Breakpoint.prototype.getId = function() {
      return this.id;
    };

    Breakpoint.prototype.getType = function() {
      return this.type;
    };

    Breakpoint.prototype.getException = function() {
      return this.exception;
    };

    Breakpoint.prototype.syncLineFromMarker = function() {
      return this.line = this.marker.getStartBufferPosition().row + 1;
    };

    Breakpoint.prototype.getLine = function() {
      if (this.marker) {
        return this.marker.getStartBufferPosition().row + 1;
      }
      return this.line;
    };

    Breakpoint.prototype.isLessThan = function(other) {
      if (!other instanceof Breakpoint) {
        return true;
      }
      if (other.getPath() < this.getPath()) {
        return true;
      }
      if (other.getLine() < this.getLine()) {
        return true;
      }
    };

    Breakpoint.prototype.isEqual = function(other) {
      if (!other instanceof Breakpoint) {
        return false;
      }
      if (other.getPath() !== this.getPath()) {
        return false;
      }
      if (other.getLine() !== this.getLine()) {
        return false;
      }
      return true;
    };

    Breakpoint.prototype.isGreaterThan = function(other) {
      return !this.isLessThan(other) && !this.isEqual(other);
    };

    Breakpoint.fromMarker = function(marker) {};

    return Breakpoint;

  })();

}).call(this);

//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAiZmlsZSI6ICIiLAogICJzb3VyY2VSb290IjogIiIsCiAgInNvdXJjZXMiOiBbCiAgICAiL1VzZXJzL211aGFtbWFkLy5hdG9tL3BhY2thZ2VzL3BocC1kZWJ1Zy9saWIvbW9kZWxzL2JyZWFrcG9pbnQuY29mZmVlIgogIF0sCiAgIm5hbWVzIjogW10sCiAgIm1hcHBpbmdzIjogIkFBQUE7QUFBQSxNQUFBLFVBQUE7O0FBQUEsRUFBQSxNQUFNLENBQUMsT0FBUCxHQUNNO0FBQ0osSUFBQSxJQUFJLENBQUMsYUFBYSxDQUFDLEdBQW5CLENBQXVCLFVBQXZCLENBQUEsQ0FBQTs7QUFBQSxJQUNBLFVBQUMsQ0FBQSxPQUFELEdBQVUsSUFEVixDQUFBOztBQUFBLElBRUEsVUFBQyxDQUFBLFlBQUQsR0FBZSxDQUZmLENBQUE7O0FBQUEsSUFHQSxVQUFDLENBQUEsU0FBRCxHQUFhLE1BSGIsQ0FBQTs7QUFBQSxJQUlBLFVBQUMsQ0FBQSxjQUFELEdBQWtCLFdBSmxCLENBQUE7O0FBQUEsSUFPQSxVQUFDLENBQUEsbUJBQUQsR0FBc0IsU0FBQSxHQUFBO0FBQ3BCLGFBQU8sSUFBQyxDQUFBLFlBQUQsRUFBUCxDQURvQjtJQUFBLENBUHRCLENBQUE7O0FBVWEsSUFBQSxvQkFBQyxJQUFELEdBQUE7QUFDWCxNQURhLElBQUMsQ0FBQSxnQkFBQSxVQUFVLElBQUMsQ0FBQSxjQUFBLFFBQVEsSUFBQyxDQUFBLFlBQUEsTUFBTSxJQUFDLENBQUEsWUFBQSxNQUFNLElBQUMsQ0FBQSxpQkFBQSxTQUNoRCxDQUFBO0FBQUEsTUFBQSxJQUFHLENBQUEsSUFBRSxDQUFBLElBQUw7QUFDRSxRQUFBLElBQUMsQ0FBQSxJQUFELEdBQVMsVUFBVSxDQUFDLFNBQXBCLENBREY7T0FBQTtBQUFBLE1BRUEsSUFBQyxDQUFBLEVBQUQsR0FBTSxVQUFVLENBQUMsbUJBQVgsQ0FBQSxDQUZOLENBQUE7QUFHQSxNQUFBLElBQUcsSUFBQyxDQUFBLE1BQUo7QUFDRSxRQUFBLElBQUMsQ0FBQSxrQkFB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

//# sourceURL=/Users/muhammad/.atom/packages/php-debug/lib/models/breakpoint.coffee
